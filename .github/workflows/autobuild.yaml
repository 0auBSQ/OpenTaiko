name: Build OpenTaiko

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Observe the Directory
        shell: cmd
        run: |
          dir

      - name: Get commit subject for version checking
        id: get-latest-commit
        run: |
          $latestCommitMessage = git log -1 --pretty=format:%s
          echo "latest_commit_message=$latestCommitMessage" >> $env:GITHUB_ENV

      - name: Extract version from commit message
        id: extract-version
        run: |
          $commitMessage = $env:latest_commit_message
          if ($commitMessage -match '^(?<version>[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)\s-\s') {
            $version = $matches['version']
            Write-Host "Extracted version is: $version"
            echo "version=$version" >> $env:GITHUB_ENV
          } else {
            Write-Host "No valid version found in the latest commit message. Skipping bump."
            echo "version=" >> $env:GITHUB_ENV
          }

      - name: Bump OpenTaiko version if necessary
        if: env.version != ''
        run: |
          $newVersion = $env:version
          Write-Host "Updating version in OpenTaiko.csproj to $newVersion"
          (Get-Content OpenTaiko/OpenTaiko.csproj) -replace '<Version>.*<\/Version>', "<Version>$newVersion</Version>" | Set-Content OpenTaiko/OpenTaiko.csproj

      - name: Get version
        uses: kzrnm/get-net-sdk-project-versions-action@v2
        id: get-version
        with:
          proj-path: OpenTaiko/OpenTaiko.csproj

      - name: Get current date
        id: get-date
        run: |
          $date = Get-Date -Format "yyyy-MM-dd"
          echo "date=$date" >> $env:GITHUB_ENV

      - name: Get changelogs from commit description
        id: get-commit-message
        run: |
          $message = git log -1 --pretty=%b
          $messagePath = 'COMMIT_MSG'
          echo $message >> $messagePath
          echo "messagePath=$messagePath" >> $env:GITHUB_ENV

      - name: Update CHANGELOG.md
        run: |
          $version = $env:version
          $date = $env:date
          $messagePath = $env:messagePath
          $changelogPath = "CHANGELOG.md"

          # Read commit description content
          $messageLines = Get-Content -Path $messagePath

          # Read CHANGELOG.md content
          $changelog = Get-Content -Path $changelogPath

          # Remove empty lines from the message
          $message = ($messageLines | Where-Object { $_ -ne "" }) -join "`n"

          # Check if the version already exists
          if ($changelog -match "## \[$version\]") {
              if ($message) {
                  # Capture the existing content under the version heading
                  $changelog = $changelog -replace "(## \[($version)\] .* \(Beta\))", "`$1`n`n$message"
              }
          } else {
              # Insert new version under '# Changelog'
              $changelog = $changelog -replace "(# Changelog)", "`$1`n`n## [$version] - $date (Beta)`n`n$message"
          }

          # Write updated content back to CHANGELOG.md
          Set-Content -Path $changelogPath -Value $changelog
